parent,child,child_file,child_start_line,child_end_line,parent_file,parent_start_line,parent_end_line,notes
"pydantic.BaseModel","SecurityContentObject_Abstract","contentctl/objects/abstract_security_content_objects/security_content_object_abstract.py","476","889","(external) pydantic.BaseModel","","","Core abstract base for all security content objects; defines common fields, validators and serialize_model"
"SecurityContentObject_Abstract","SecurityContentObject","contentctl/objects/security_content_object.py","1","9","contentctl/objects/abstract_security_content_objects/security_content_object_abstract.py","476","889","Thin subclass (pass) that serves as the concrete base used by other models"
"SecurityContentObject","Detection_Abstract","contentctl/objects/abstract_security_content_objects/detection_abstract.py","61","1159","contentctl/objects/security_content_object.py","1","9","Detection_Abstract adds detection-specific fields, validators and serializers (e.g., search validation, tests handling)"
"Detection_Abstract","Detection","contentctl/objects/detection.py","8","21","contentctl/objects/abstract_security_content_objects/detection_abstract.py","61","1159","Concrete Detection class: class Detection(Detection_Abstract): pass â€” inherits all behavior from Detection_Abstract"
"SecurityContentObject","Story","contentctl/objects/story.py","31","179","contentctl/objects/security_content_object.py","1","9","Story model (inherits SecurityContentObject) with narrative, tags, computed fields and serializers"